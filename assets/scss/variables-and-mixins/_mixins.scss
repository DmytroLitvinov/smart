@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn 'Unknown `#{$key}` in $colors.';
  @return null;
}

@mixin color-map($property, $color) {
  @if $color == transparent {
    #{$property}: $color;
  } @else {
    #{$property}: color($color);
    #{$property}: var(--#{$color}, color($color));
  }
}

@mixin outline {
  outline-width: 2px;
  outline-style: solid;
  @include color-map(outline-color, primary);
  outline-offset: 1px;
}

@mixin transition($property) {
  transition: $property 0.2s cubic-bezier(0.41, 0.56, 0.05, 0.95);
}

//-------------------------------------------
// Utility Classes and Mixins
//------------------------ -------------------
@mixin flex($direction, $justify, $align) {
  display: flex;

  @if $direction == column {
    flex-direction: $direction;
  }

  @if $justify != flex-start {
    justify-content: $justify;
  }

  @if $align != stretch {
    align-items: $align;
  }
}

@mixin respond-above($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin respond-below($breakpoint) {
  @media (max-width: $breakpoint) {
    @content;
  }
}

@mixin respond-between($min, $max) {
  @media (min-width: $min) and (max-width: $max - 1) {
    @content;
  }
}

@mixin btn(
  $type,
  $bgColor: primary,
  $hvrColor: secondary,
  $text: text1,
  $hvrText: text
) {
  padding: 0.25rem 0.5rem;
  font-family: $sans;
  font-size: 1em;
  // font-weight: 700;
  // line-height: 1;
  cursor: pointer;
  background: none;
  border: none;
  border-radius: $radius;
  box-shadow: $box-shadow;

  svg {
    width: 1em;
    height: 1em;
    margin-right: 1px;
    vertical-align: text-top;
    stroke: currentColor;
  }

  @if $type == color {
    height: 2em;
    padding: 0.25rem;
    margin: 0.75rem 0;
    font-size: 0.9rem;
    @include color-map(color, textInverse);
    @include color-map(background-color, primary);
    @include transition(background-color);

    &:hover {
      @include color-map(background-color, secondary);
    }

    &:active {
      box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.35);
    }
  }

  @if $type == outline {
    border: 1px solid currentColor;
    @include color-map(color, $text);
    @include transition(color);

    &:hover {
      outline: none;
      @include color-map(color, $hvrText);
    }
    &:active {
      box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.35);
    }
  }

  @if $type == link {
    @extend .link;
    font-size: 1em;
    font-weight: 400;
    line-height: 1.5;
    color: currentColor;
    border: none;
    border-radius: 0;
    box-shadow: none;
  }

  @if $type == icon {
    @include color-map(background-color, $bgColor);
    @include color-map(color, $text);
    @include transition(all);

    &:hover {
      @include color-map(background-color, $hvrColor);
      @include color-map(color, $hvrText);
    }
    &:active {
      box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.35);
    }
  }

  @if $type == list {
    @extend .link;
    padding: 0;
    color: currentColor;
    text-align: left;
    background-color: transparent;
    box-shadow: none;
  }
}

@mixin navbar($property, $negative: false, $increase: 0) {
  #{$property}: 3.25rem + $increase;

  @media (min-width: $laptop) {
    #{$property}: 5.5rem + $increase;
  }

  @if $negative {
    #{$property}: -3.25rem + -$increase;

    @media (min-width: $laptop) {
      #{$property}: -5.5rem + -$increase;
    }
  }
}
