*[data-tt] {
  position: relative;

  &:hover .tt {
    display: block;
  }
}
@keyframes fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
$borderWidth: 5px;
.tt {
  position: absolute;
  z-index: 11;
  display: none;
  padding: 0.25rem 0.5rem;
  font-weight: 300;
  text-align: center;
  white-space: nowrap;
  filter: drop-shadow(3px 3px 4px rgba(0, 0, 0, 0.12));
  border-radius: $radius;
  animation: fade $transition;
  @include color-map(background-color, surface4);

  &:after {
    position: absolute;
    content: '';
    border-color: transparent;
    border-style: solid;
    border-width: $borderWidth;
  }

  &.right {
    top: 50%;
    left: calc(100% + #{$borderWidth});
    transform: translate3d(0, -50%, 0);

    &:after {
      top: 50%;
      left: $borderWidth * -2;
      transform: translate3d(0, -50%, 0);
      @include color-map(border-right-color, surface4);
    }
  }

  &.left {
    top: 50%;
    right: calc(100% + #{$borderWidth});
    transform: translate3d(0, -50%, 0);

    &:after {
      top: 50%;
      right: $borderWidth * -2;
      transform: translate3d(0, -50%, 0);
      @include color-map(border-left-color, surface4);
    }
  }
  &.top {
    top: 0;
    left: 50%;
    transform: translate3d(-50%, calc(-100% - #{$borderWidth}), 0);

    &:after {
      bottom: $borderWidth * -2;
      left: 50%;
      transform: translate3d(-50%, 0, 0);
      @include color-map(border-top-color, surface4);
    }
  }
  &.bottom {
    bottom: 0;
    left: 50%;
    transform: translate3d(-50%, calc(100% + #{$borderWidth}), 0);

    &:after {
      top: $borderWidth * -2;
      left: 50%;
      transform: translate3d(-50%, 0, 0);
      @include color-map(border-bottom-color, surface4);
    }
  }

  p {
    font-size: 0.8rem;
    line-height: 1.2;
    @include color-map(color, text1);
  }
}
