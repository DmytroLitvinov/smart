//-------------------------------------------
// Colors
//-------------------------------------------

// Social Media
$fb: #1877f2;
$tw: #1da1f2;
$li: #0077b5;

// Bright Mode
:root[color-mode="bright"] {
  --text: rgb(10, 10, 10);
  --text1: rgb(23, 23, 23);
  --text2: rgb(57, 57, 58);
  --text3: rgb(90, 90, 92);
  --text4: rgb(158, 160, 162);

  --surface: rgb(215, 215, 216);
  --surface1: rgb(239, 239, 240);
  --surface2: rgb(244, 244, 245);
  --surface3: rgb(249, 249, 249);
  --surface4: rgb(253, 253, 254);

  --primary: rgb(13, 72, 160);
  --secondary: rgb(255, 87, 34);
}

// Dark Mode (Default)
:root[color-mode="dark"] {
  --text: rgb(245, 245, 245);
  --text1: rgb(232, 233, 233);
  --text2: rgb(198, 198, 199);
  --text3: rgb(165, 165, 167);
  --text4: rgb(97, 99, 101);

  --surface: rgb(10, 10, 11);
  --surface1: rgb(12, 13, 14);
  --surface2: rgb(17, 18, 20);
  --surface3: rgb(26, 27, 31);
  --surface4: rgb(29, 30, 34);

  --primary: rgb(128, 222, 234);
  --secondary: rgb(255, 171, 145);
}

// Fallback (defaults to Dark Mode)
$colors: (
  "text": #f5f5f5,
  "text1": #e8e9e9,
  "text2": #c7c7c8,
  "text3": #a5a5a7,
  "text4": #616264,
  "surface": #09090a,
  "surface1": #0d0e0f,
  "surface2": #111214,
  "surface3": #1a1b1f,
  "surface4": #1d1e22,
  "primary": #80deea,
  "secondary": #ffab91
);

@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}

@mixin color-map($property, $color) {
  #{$property}: color($color);
  #{$property}: var(--#{$color});
}

//-------------------------------------------
// Fonts
//-------------------------------------------
$sans: "Lato", -apple-system, blinkmacsystemfont, "Segoe UI", roboto, oxygen,
  ubuntu, cantarell, "Open Sans", "Helvetica Neue", sans-serif;

$serif: "DM Serif Text", georgia, times, serif;

.serif {
  font-family: $serif;
  font-weight: 400;
}

//-------------------------------------------
// Sizes, Breakpoints, Variables
//-------------------------------------------

// Breakpoints
$tablet: 640px;
$laptop: 1024px;
$desktop: 1280px;

// Sizes
$base: 9rem;
$navbar: 3rem;
$radius: 4px;

// Box Shadow
$box-shadow-large: 3px 3px 4px rgba(0, 0, 0, 0.12),
  -3px 2px 4px rgba(0, 0, 0, 0.12), 5px 10px 15px rgba(0, 0, 0, 0.14),
  -5px 5px 15px rgba(0, 0, 0, 0.14);

$box-shadow: 0 8px 17px 2px rgba(0, 0, 0, 0.14),
  0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2);

$box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
  0 4px 6px -2px rgba(0, 0, 0, 0.05);

@mixin transition($property) {
  transition: $property 0.2s cubic-bezier(0.41, 0.56, 0.05, 0.95);
}

//-------------------------------------------
// Utility Classes and Mixins
//------------------------ -------------------
@mixin flex($direction, $justify, $align) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

@mixin respond-above($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin respond-below($breakpoint) {
  @media (max-width: $breakpoint) {
    @content;
  }
}

@mixin respond-between($min, $max) {
  @media (min-width: $min) and (max-width: $max - 1) {
    @content;
  }
}

.grid-container {
  display: grid;
  grid-gap: 1.5rem;
}

.outer-container {
  position: relative;
  width: 100%;
  padding: 1em;
  border-bottom-style: solid;
  border-bottom-width: 0.5rem;
  @include color-map(border-bottom-color, surface);

  @include respond-between($tablet, $laptop) {
    padding: 1rem 3rem;
  }

  @include respond-above($laptop) {
    padding: 1rem 4rem;
  }
}

.inner-container {
  max-width: $laptop;
  margin: 0 auto 1rem;
}

.header {
  position: relative;
  margin: 0;
}

.index {
  margin-top: $navbar;
}

// Underline from left effect
.hvr-underline-from-left {
  position: relative;
  display: inline-block;
  overflow: hidden;
  line-height: 1.2;
  vertical-align: middle;
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  transform: perspective(1px) translateZ(0);
}

.hvr-underline-from-left:before {
  position: absolute;
  right: 100%;
  bottom: 0;
  left: 0;
  z-index: -1;
  height: 0.5em;
  content: "";
  @include color-map(background, primary);
  opacity: 0.75;
  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transition-duration: 0.4s;
  transition-property: right;
}

.hvr-underline-from-left:hover:before,
.hvr-underline-from-left:focus:before,
.hvr-underline-from-left:active:before,
.nav-current:before {
  right: 0;
}

// Underline effect
.underline {
  display: inline-block;
  line-height: 0.95;
  text-shadow: 2px 2px color("surface1"), 2px -2px color("surface1"),
    -2px 2px color("surface1"), -2px -2px color("surface1");
  text-shadow: 2px 2px var(--surface1), 2px -2px var(--surface1),
    -2px 2px var(--surface1), -2px -2px var(--surface1);
  border-bottom: 2px solid currentColor;
}

@mixin underline {
  display: inline-block;
  line-height: 0.95;
  text-shadow: 2px 2px color("surface1"), 2px -2px color("surface1"),
    -2px 2px color("surface1"), -2px -2px color("surface1");
  text-shadow: 2px 2px var(--surface1), 2px -2px var(--surface1),
    -2px 2px var(--surface1), -2px -2px var(--surface1);
  border-bottom: 2px solid currentColor;
}
