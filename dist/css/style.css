.dev{position:fixed;left:0;top:0;background:rgba(0,0,0,.85);font-size:1em;font-family:'Fira Code','Courier New',Courier,monospace;color:#ff0;text-align:center;padding:4px 8px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.st-serif{font-family:"Crimson Text",Georgia,Times,serif}.st-flex-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.st-flex-col{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.st-grid-container{display:grid;grid-gap:4em;-webkit-box-pack:stretch;-ms-flex-pack:stretch;justify-content:stretch}.st-main{margin:0 auto;width:100%}.hvr-underline-from-left{display:inline-block;vertical-align:middle;-webkit-transform:perspective(1px) translateZ(0);transform:perspective(1px) translateZ(0);-webkit-box-shadow:0 0 1px transparent;box-shadow:0 0 1px transparent;position:relative;overflow:hidden}.hvr-underline-from-left:before{content:"";position:absolute;z-index:-1;left:0;right:100%;bottom:-7px;background:#bf204a;height:12px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:.3s;transition-duration:.3s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out}.hvr-underline-from-left:active:before,.hvr-underline-from-left:focus:before,.hvr-underline-from-left:hover:before{right:0}.st-home-post-border-bottom{height:2px;bottom:0;left:0;position:absolute;width:100%;border-bottom:2px solid transparent}*{-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}button{background:0 0;border:none}html{background:#ebeffd;color:#031c1f;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;font-size:16px;font-weight:400;line-height:1.5}@media screen and (min-width:640px) and (max-width:1024px){html{font-size:17px}}@media screen and (min-width:1024px) and (max-width:1280px){html{font-size:18px}}@media screen and (min-width:1280px){html{font-size:19px}}.h1,h1{font-size:4.23529412em;line-height:1.08333333em;margin-top:.36111111em;margin-bottom:.72222222em}.h2,h2{font-size:2.64705882em;line-height:1.15555556em;margin-top:.57777778em;margin-bottom:.57777778em}.h3,h3{font-size:1.64705882em;line-height:1.85714286em;margin-top:.92857143em;margin-bottom:0}.h4,h4{font-size:1em;line-height:1.52941176em;margin-top:1.52941176em;margin-bottom:0}.h5,h5{font-size:1em;line-height:1.52941176em;margin-top:1.52941176em;margin-bottom:0}:link{color:#ebeffd;text-decoration:none}:visited{color:#ebeffd}.st-nav-container{max-width:640px;margin:25px auto}.st-extras{font-size:.85em}.st-extras button{cursor:pointer;line-height:1.5}.st-extras>*{margin:10px}.st-nav-item{color:#ebeffd}.st-nav-item img{height:24px}.st-nav-right{margin-left:auto}.st-main-nav{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.st-search-box{display:none;left:0;position:fixed;overflow:hidden;top:0;width:100%;height:100%;background:rgba(3,28,31,.95);opacity:0}.st-search-bar{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:1.5em 3em;width:100%;background:#031c1f;-webkit-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-transition-duration:.2s;transition-duration:.2s;-webkit-transition-timing-function:cubic-bezier(0,1,.5,1);transition-timing-function:cubic-bezier(0,1,.5,1)}.st-search-bar input{margin-right:1em;padding:1em 1em .5em;width:calc(80% - 1em);background:#020e10;border:none;color:#ebeffd;font-size:1.25em;outline:0;border-bottom:1px solid #bf204a}.st-search-bar button{height:2em;margin-right:1em;width:calc(10% - .5em);color:#ebeffd;cursor:pointer;font-size:1em;background:#bf204a;padding:.5em}.st-search-bar button:last-child{margin-right:0}.st-search-box-max-height{display:block;height:100vh;opacity:1}.st-hero-image{height:100%;background-position:center;background-repeat:no-repeat;background-size:cover}.st-hero-overlay{-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;-ms-flex-pack:distribute;justify-content:space-around;padding:1em;background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.85)),color-stop(rgba(0,0,0,.75)),to(rgba(0,0,0,.85)));background:linear-gradient(rgba(0,0,0,.85),rgba(0,0,0,.75),rgba(0,0,0,.85))}.st-hero-container{-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:60vh;min-height:300px;-ms-flex-pack:distribute;justify-content:space-around}.st-nav-container{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:80%}.st-site-title{margin:15px 0 0;text-align:center}.st-site-description{color:#e396a5}.st-site-description-text{font-size:1.5em}.st-outer-container{width:100%;margin:2.5em auto;padding:2em}.st-outer-container:nth-child(even){background:#031c1f}.st-outer-container:nth-child(even) .st-home-post-header{color:#ebeffd}.st-outer-container:nth-child(even) .st-home-post-header:before{background:-webkit-gradient(linear,left top,right top,from(rgba(13,114,114,.25)),to(rgba(13,114,114,0)));background:linear-gradient(to right,rgba(13,114,114,.25),rgba(13,114,114,0))}.st-outer-container:nth-child(even) .st-home-post-title{color:#ebeffd}.st-outer-container:nth-child(even) .st-home-post-title-link:active .st-home-post-title,.st-outer-container:nth-child(even) .st-home-post-title-link:focus .st-home-post-title,.st-outer-container:nth-child(even) .st-home-post-title-link:hover .st-home-post-title{color:#0d7272}.st-outer-container:nth-child(even) .st-home-post-border-bottom{border-color:rgba(13,114,114,.25)}.st-outer-container:nth-child(even) .st-date a,.st-outer-container:nth-child(even) .st-date p,.st-outer-container:nth-child(even) .st-tag a,.st-outer-container:nth-child(even) .st-tag p{color:rgba(235,239,253,.9)}.st-outer-container:nth-child(even) .st-tag>a:active,.st-outer-container:nth-child(even) .st-tag>a:focus,.st-outer-container:nth-child(even) .st-tag>a:hover{color:#0d7272}.st-outer-container:last-child{margin-bottom:0}@media all and (min-width:640px){.st-outer-container{padding:2.5em}}.st-inner-container{margin:1em auto;max-width:1024px}.st-home-post-header-container{margin:.5em 0 1.5em}.st-home-post-header{display:inline;position:relative;z-index:1}.st-home-post-header:before{background:-webkit-gradient(linear,left top,right top,from(rgba(191,32,74,.25)),to(rgba(191,32,74,0)));background:linear-gradient(to right,rgba(191,32,74,.25),rgba(191,32,74,0));content:"";bottom:5px;position:absolute;height:50%;left:0;z-index:-1;width:100%}.st-home-post{max-width:100%;position:relative}.st-home-post .st-home-post-border-bottom{border-color:rgba(191,32,74,.25)}.st-home-post-image-link .st-home-post-image:hover{-webkit-transform:scale(1.05);transform:scale(1.05)}.st-home-post-image{display:block;height:175px;width:100%;-o-object-fit:cover;object-fit:cover}.st-home-post-body{margin:.75em 0 1.5em}.st-home-post-date-and-tag,.st-home-post-date-and-tag>a{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;margin:.5em 0 .25em;color:rgba(3,28,31,.9);font-size:.8rem;font-weight:300}.st-home-post-date-and-tag>a:active,.st-home-post-date-and-tag>a:focus,.st-home-post-date-and-tag>a:hover{color:#bf204a}.st-date,.st-tag{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;line-height:1}.st-date a,.st-date p,.st-tag a,.st-tag p{color:rgba(3,28,31,.9)}.st-date object,.st-tag object{height:1rem;margin-right:.2rem}.st-date object:last-child,.st-tag object:last-child{margin-left:.5em}.calendar,.tag{stroke:rgba(3,28,31,.9)}.st-date{margin-right:.5em}.st-home-post-title{margin-top:.5em;position:relative;line-height:1.2;font-weight:600}.st-home-post-title-link{color:#031c1f}.st-home-post-title-link:active .st-home-post-title,.st-home-post-title-link:focus .st-home-post-title,.st-home-post-title-link:hover .st-home-post-title{color:#bf204a}.st-grid-container-home{-ms-flex-line-pack:stretch;align-content:stretch;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));max-width:100%}@media all and (min-width:640px) and (max-width:1024px){.st-grid-container-home-1{grid-template-columns:minmax(250px,500px)}.st-grid-container-home-2,.st-grid-container-home-4{grid-template-columns:repeat(2,1fr)}.st-grid-container-home-3{grid-template-areas:"one one" "two three";grid-template-columns:1fr 1fr}.st-grid-container-home-3 .st-home-post-1{grid-area:one}.st-grid-container-home-3 .st-home-post-1 .st-home-post-image{height:437.5px;max-height:60vh}.st-grid-container-home-3 .st-home-post-2{grid-area:two}.st-grid-container-home-3 .st-home-post-3{grid-area:three}.st-grid-container-home-5{grid-template-areas:"one one" "two three" "four five";grid-template-columns:1fr 1fr}.st-grid-container-home-5 .st-home-post-1{grid-area:one}.st-grid-container-home-5 .st-home-post-1 .st-home-post-image{height:437.5px;max-height:60vh}.st-grid-container-home-5 .st-home-post-2{grid-area:two}.st-grid-container-home-5 .st-home-post-3{grid-area:three}.st-grid-container-home-5 .st-home-post-4{grid-area:four}.st-grid-container-home-5 .st-home-post-5{grid-area:five}.st-home-post-image{height:262.5px}}@media all and (min-width:1024px) and (max-width:1280px){.st-grid-container-home-1{grid-template-columns:minmax(250px,500px)}.st-grid-container-home-2,.st-grid-container-home-4{grid-template-columns:repeat(2,1fr)}.st-grid-container-home-3{grid-template-areas:"one one" "two three";grid-template-columns:1fr 1fr}.st-grid-container-home-3 .st-home-post-1{grid-area:one}.st-grid-container-home-3 .st-home-post-1 .st-home-post-image{height:437.5px;max-height:60vh}.st-grid-container-home-3 .st-home-post-2{grid-area:two}.st-grid-container-home-3 .st-home-post-3{grid-area:three}.st-grid-container-home-5{grid-template-areas:"one one" "two three" "four five";grid-template-columns:1fr 1fr}.st-grid-container-home-5 .st-home-post-1{grid-area:one}.st-grid-container-home-5 .st-home-post-1 .st-home-post-image{height:437.5px;max-height:60vh}.st-grid-container-home-5 .st-home-post-2{grid-area:two}.st-grid-container-home-5 .st-home-post-3{grid-area:three}.st-grid-container-home-5 .st-home-post-4{grid-area:four}.st-grid-container-home-5 .st-home-post-5{grid-area:five}.st-home-post-image{height:262.5px}}@media all and (min-width:1280px){.st-grid-container-home-1{grid-template-columns:minmax(250px,500px)}.st-grid-container-home-2{grid-template-columns:repeat(2,1fr)}.st-grid-container-home-3{grid-template-columns:repeat(3,1fr)}.st-grid-container-home-4{grid-template-areas:"one one one" "two three four";grid-template-columns:1fr 1fr 1fr}.st-grid-container-home-4 .st-home-post-1{grid-area:one}.st-grid-container-home-4 .st-home-post-1 .st-home-post-image{height:437.5px;max-height:60vh}.st-grid-container-home-4 .st-home-post-2{grid-area:two}.st-grid-container-home-4 .st-home-post-3{grid-area:three}.st-grid-container-home-4 .st-home-post-4{grid-area:four}.st-grid-container-home-4 .st-home-post-image{height:262.5px}.st-grid-container-home-5{grid-template-areas:"one one one two two two" "three three four four five five";grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr}.st-grid-container-home-5 .st-home-post-1{grid-area:one}.st-grid-container-home-5 .st-home-post-1 .st-home-post-image{height:525px;max-height:60vh}.st-grid-container-home-5 .st-home-post-2{grid-area:two}.st-grid-container-home-5 .st-home-post-2 .st-home-post-image{height:525px;max-height:60vh}.st-grid-container-home-5 .st-home-post-3{grid-area:three}.st-grid-container-home-5 .st-home-post-4{grid-area:four}.st-grid-container-home-5 .st-home-post-5{grid-area:five}.st-home-post-image{height:350px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
