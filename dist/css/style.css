@charset "UTF-8";.dev{position:fixed;left:0;top:0;background:rgba(0,0,0,.85);font-size:1em;font-family:'Fira Code','Courier New',Courier,monospace;color:#ff0;text-align:center;padding:4px 8px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.light{fill:#f7fefd}.serif{font-family:"DM Serif Text",Georgia,Times,serif}.flex-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.flex-col{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.grid-container{display:grid;grid-gap:2em}.main{margin:0 auto;width:100%}.hvr-underline-from-left{display:inline-block;vertical-align:middle;-webkit-transform:perspective(1px) translateZ(0);transform:perspective(1px) translateZ(0);-webkit-box-shadow:0 0 1px transparent;box-shadow:0 0 1px transparent;position:relative;overflow:hidden}.hvr-underline-from-left:before{content:"";position:absolute;z-index:-1;left:0;right:100%;bottom:-7px;background:#f4725b;height:12px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:.3s;transition-duration:.3s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out}.hvr-underline-from-left:active:before,.hvr-underline-from-left:focus:before,.hvr-underline-from-left:hover:before{right:0}.underline{border-bottom:2px solid currentColor;display:inline-block;line-height:.85;text-shadow:2px 2px #f7fefd,2px -2px #f7fefd,-2px 2px #f7fefd,-2px -2px #f7fefd}*{-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}button{background:0 0;border:none;cursor:pointer}html{background:#f7fefd;color:#181818;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;font-size:16px;font-weight:400;line-height:1.5;scroll-behavior:smooth}@media screen and (min-width:640px) and (max-width:1024px){html{font-size:17px}}@media screen and (min-width:1024px) and (max-width:1280px){html{font-size:18px}}@media screen and (min-width:1280px){html{font-size:19px}}.h1,h1{font-size:4.23529412em;line-height:1.08333333em;margin-top:.36111111em;margin-bottom:.72222222em}.h2,h2{font-size:2.64705882em;line-height:1.15555556em;margin-top:.57777778em;margin-bottom:.57777778em}.h3,h3{font-size:1.64705882em;line-height:1.85714286em;margin-top:.92857143em;margin-bottom:0}.h4,h4{font-size:1em;line-height:1.52941176em;margin-top:1.52941176em;margin-bottom:0}.h5,h5{font-size:1em;line-height:1.52941176em;margin-top:1.52941176em;margin-bottom:0}:link{color:#f7fefd;text-decoration:none}:visited{color:#f7fefd}.nav-container{width:100%}.extras{font-size:.85em}.extras button{cursor:pointer;line-height:1.5}.extras>*{margin:10px}.nav-hero{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-flex:1;-ms-flex:1;flex:1}.social-media{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100%}.social-media a{margin:.5em 0}.nav-item{color:#f7fefd;margin-right:.5em}.nav-item:last-child{margin-right:0}.main-nav{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.fixed-navbar{position:fixed;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;z-index:5;padding:.75em 1em;background:0 0;font-size:.8em;line-height:1.6;-webkit-transition:all .1s ease-in-out;transition:all .1s ease-in-out}.fixed-left{color:#f7fefd;font-family:"DM Serif Text",Georgia,Times,serif;font-size:1.25em;-webkit-box-flex:1;-ms-flex:auto;flex:auto}.fixed-left a h1{font-size:1em;margin:0;font-weight:400}.fixed-center{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:auto;flex:auto;-ms-flex-pack:distribute;justify-content:space-around;max-width:640px}.fixed-right a svg,.fixed-right button svg{height:18px;width:18px}.fixed-right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:auto;flex:auto;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.fixed-right>*{margin-left:.75em}.fixed-right button svg:hover{stroke:#f4725b}#facebook svg:hover{fill:#1877f2}#twitter svg:hover{fill:#1da1f2}#search-button svg{height:21px;width:21px}.st-search-box{display:none;left:0;position:fixed;overflow:hidden;top:0;width:100%;height:100%;background:rgba(24,24,24,.95);opacity:0}.st-search-bar{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:1.5em 3em;width:100%;background:#181818;-webkit-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-transition-duration:.2s;transition-duration:.2s;-webkit-transition-timing-function:cubic-bezier(0,1,.5,1);transition-timing-function:cubic-bezier(0,1,.5,1)}.st-search-bar input{margin-right:1em;padding:1em 1em .5em;width:calc(80% - 1em);background:#0c0c0c;border:none;color:#f7fefd;font-size:1.25em;outline:0;border-bottom:1px solid #f4725b}.st-search-bar button{height:2em;margin-right:1em;width:calc(10% - .5em);color:#f7fefd;cursor:pointer;font-size:1em;background:#f4725b;padding:.5em}.st-search-bar button:last-child{margin-right:0}.st-search-box-max-height{display:block;height:100vh;opacity:1}.hero-img{height:100%;background-position:center;background-repeat:no-repeat;background-size:cover}.hero-overlay{-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;-ms-flex-pack:distribute;justify-content:space-around;padding:1em;background:-webkit-gradient(linear,left top,left bottom,from(rgba(30,8,4,.8)),color-stop(rgba(51,24,34,.7)),to(rgba(30,8,4,.8)));background:linear-gradient(rgba(30,8,4,.8),rgba(51,24,34,.7),rgba(30,8,4,.8));background:rgba(0,0,0,.75)}.hero-container{-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:60vh;min-height:300px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.nav-container{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100%}.site-title{margin:0;text-align:center}.site-description-text{padding:0 2em;color:#f7fefd;font-size:2em;text-align:left;text-shadow:2px 2px 2px #181818;text-align:left}.outer-container{position:relative;width:100%;padding:1em 3em;background:#f7fefd}.inner-container{margin:1em auto;max-width:1024px}.home-page-section-header{margin:1em 0 .5em;line-height:1}.card{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background:#f7fefd;-webkit-transition:all .3s cubic-bezier(.25,.8,.25,1);transition:all .3s cubic-bezier(.25,.8,.25,1)}.card:hover .card-image{-webkit-filter:saturate(1.5);filter:saturate(1.5)}.card:hover .card-title{color:#f4725b}.card-link-overlay{position:absolute;top:0;left:0;height:100%;width:100%;z-index:1}.card-image,.no-image{display:block;width:100%;height:125px;-o-object-fit:cover;object-fit:cover;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.no-image{background:linear-gradient(45deg,#f4725b,#bd708c)}.card-body{margin:.5em 0;padding:1em}.card-date,.card-tag{color:#181818;font-size:.75em;font-weight:400;text-transform:uppercase}.card-title{margin:.25em 0;color:#181818;position:relative;font-size:1.5em;font-weight:600;line-height:1.1;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.card-excerpt{color:#181818;margin:.5em 0}.grid-container-home{-ms-flex-line-pack:stretch;align-content:stretch;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));margin:2em 0;max-width:100%}@media all and (min-width:640px) and (max-width:1024px){.grid-container-home-1{grid-template-columns:minmax(250px,500px)}.grid-container-home-2,.grid-container-home-4{grid-template-columns:repeat(2,1fr)}.grid-container-home-3{grid-template-areas:"one one" "two three";grid-template-columns:1fr 1fr}.grid-container-home-3 .card-1{grid-area:one}.grid-container-home-3 .card-1 .card-image,.grid-container-home-3 .card-1 .no-image{height:312.5px;max-height:60vh}.grid-container-home-3 .card-2{grid-area:two}.grid-container-home-3 .card-3{grid-area:three}.grid-container-home-5{grid-template-areas:"one one" "two three" "four five";grid-template-columns:1fr 1fr}.grid-container-home-5 .card-1{grid-area:one}.grid-container-home-5 .card-1 .card-image,.grid-container-home-5 .card-1 .no-image{height:312.5px;max-height:60vh}.grid-container-home-5 .card-2{grid-area:two}.grid-container-home-5 .card-3{grid-area:three}.grid-container-home-5 .card-4{grid-area:four}.grid-container-home-5 .card-5{grid-area:five}.card-image,.no-image{height:187.5px}}@media all and (min-width:1024px) and (max-width:1280px){.grid-container-home-1{grid-template-columns:minmax(250px,500px)}.grid-container-home-2,.grid-container-home-4{grid-template-columns:repeat(2,1fr)}.grid-container-home-3{grid-template-areas:"one one" "two three";grid-template-columns:1fr 1fr}.grid-container-home-3 .card-1{grid-area:one}.grid-container-home-3 .card-1 .card-image,.grid-container-home-3 .card-1 .no-image{height:312.5px;max-height:60vh}.grid-container-home-3 .card-2{grid-area:two}.grid-container-home-3 .card-3{grid-area:three}.grid-container-home-5{grid-template-areas:"one one" "two three" "four five";grid-template-columns:1fr 1fr}.grid-container-home-5 .card-1{grid-area:one}.grid-container-home-5 .card-1 .card-image,.grid-container-home-5 .card-1 .no-image{height:312.5px;max-height:60vh}.grid-container-home-5 .card-2{grid-area:two}.grid-container-home-5 .card-3{grid-area:three}.grid-container-home-5 .card-4{grid-area:four}.grid-container-home-5 .card-5{grid-area:five}.card-image,.no-image{height:187.5px}}@media all and (min-width:1280px){.grid-container-home-1{grid-template-columns:minmax(250px,500px)}.grid-container-home-2{grid-template-columns:repeat(2,1fr)}.grid-container-home-3{grid-template-columns:repeat(3,1fr)}.grid-container-home-4{grid-template-areas:"one one one" "two three four";grid-template-columns:1fr 1fr 1fr}.grid-container-home-4 .card-1{grid-area:one}.grid-container-home-4 .card-1 .card-image,.grid-container-home-4 .card-1 .no-image{height:312.5px;max-height:60vh}.grid-container-home-4 .card-2{grid-area:two}.grid-container-home-4 .card-3{grid-area:three}.grid-container-home-4 .card-4{grid-area:four}.grid-container-home-4 .card-image,.grid-container-home-4 .no-image{height:187.5px}.grid-container-home-5{grid-template-areas:"one one one two two two" "three three four four five five";grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr}.grid-container-home-5 .card-1{grid-area:one}.grid-container-home-5 .card-1 .card-image,.grid-container-home-5 .card-1 .no-image{height:375px;max-height:60vh}.grid-container-home-5 .card-2{grid-area:two}.grid-container-home-5 .card-2 .card-image,.grid-container-home-5 .card-2 .no-image{height:375px;max-height:60vh}.grid-container-home-5 .card-3{grid-area:three}.grid-container-home-5 .card-4{grid-area:four}.grid-container-home-5 .card-5{grid-area:five}.card-image,.no-image{height:250px}}.post-image{width:100%;height:40vh}.post-image img{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.post{max-width:640px;display:block;margin:0 auto}.post>p{margin-bottom:1em}.kg-width-wide img{max-width:85vw}.kg-width-full img{max-width:100vw}.kg-bookmark-container{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;color:#000;text-decoration:none;border:2px solid #00f}.kg-bookmark-content{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:999;-ms-flex-positive:999;flex-grow:999;min-width:50%;padding:20px}.kg-bookmark-title{font-weight:600}.kg-bookmark-description,.kg-bookmark-metadata{margin-top:12px}.kg-bookmark-thumbnail{-ms-flex-preferred-size:15rem;flex-basis:15rem;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.kg-bookmark-thumbnail img{vertical-align:bottom;-o-object-fit:cover;object-fit:cover;width:100%}.kg-bookmark-icon{width:22px;height:22px;margin-right:8px;vertical-align:bottom}.kg-bookmark-author:after{content:"•";margin:0 6px}.kg-gallery-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin:1.5em auto;max-width:1040px;width:100vw}.kg-gallery-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.kg-gallery-image img{display:block;margin:0;width:100%;height:100%}.kg-gallery-row:not(:first-of-type){margin:.75em 0 0 0}.kg-gallery-image:not(:first-of-type){margin:0 0 0 .75em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
