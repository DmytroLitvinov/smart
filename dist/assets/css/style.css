@charset "UTF-8";.dev{position:fixed;left:0;top:0;z-index:999;background:rgba(0,0,0,.85);font-size:1em;font-family:'Fira Code','Courier New',Courier,monospace;color:#ff0;text-align:center;padding:4px 8px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.serif{font-family:"DM Serif Text",Georgia,Times,serif}.flex-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.flex-col{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.grid-container{display:grid;grid-gap:2em}.main{margin:0 auto;width:100%}.no-scroll{position:fixed;overflow:hidden}.dark{color:#f7fefd}.back-to-top{position:fixed;bottom:2em;right:2em;z-index:10;line-height:1}.back-to-top svg{height:48px;width:48px;fill:rgba(247,254,253,.95);stroke:#f4725b;color:#f4725b}.hvr-underline-from-left{display:inline-block;vertical-align:middle;-webkit-transform:perspective(1px) translateZ(0);transform:perspective(1px) translateZ(0);-webkit-box-shadow:0 0 1px transparent;box-shadow:0 0 1px transparent;position:relative;overflow:hidden}.hvr-underline-from-left:before{content:"";position:absolute;z-index:-1;left:0;right:100%;bottom:-7px;background:#f4725b;height:12px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:.3s;transition-duration:.3s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out}.hvr-underline-from-left:active:before,.hvr-underline-from-left:focus:before,.hvr-underline-from-left:hover:before{right:0}.underline{border-bottom:2px solid currentColor;display:inline-block;line-height:.95;text-shadow:2px 2px #f7fefd,2px -2px #f7fefd,-2px 2px #f7fefd,-2px -2px #f7fefd}.underline-dark{border-bottom:2px solid currentColor;display:inline-block;line-height:.85;text-shadow:2px 2px #181818,2px -2px #181818,-2px 2px #181818,-2px -2px #181818}*{-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}button{background:0 0;border:none;cursor:pointer}html{background:#f7fefd;color:#181818;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;font-size:16px;font-weight:400;line-height:1.5;scroll-behavior:smooth}@media screen and (min-width:640px) and (max-width:1024px){html{font-size:17px}}@media screen and (min-width:1024px) and (max-width:1280px){html{font-size:18px}}@media screen and (min-width:1280px){html{font-size:19px}}.h1,h1{font-size:4.23529412em;line-height:1.08333333em;margin-top:.36111111em;margin-bottom:.72222222em}.h2,h2{font-size:2.64705882em;line-height:1.15555556em;margin-top:.57777778em;margin-bottom:.57777778em}.h3,h3{font-size:1.64705882em;line-height:1.85714286em;margin-top:.92857143em;margin-bottom:0}.h4,h4{font-size:1em;line-height:1.52941176em;margin-top:1.52941176em;margin-bottom:0}.h5,h5{font-size:1em;line-height:1.52941176em;margin-top:1.52941176em;margin-bottom:0}:link{color:currentColor;text-decoration:none}:visited{color:currentColor}::-moz-selection{background:#f4725b;color:#181818}::selection{background:#f4725b;color:#181818}:target{padding-top:3rem;margin-top:-3rem}/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */.hamburger{padding:2px 2px;display:inline-block;cursor:pointer;-webkit-transition-property:opacity,-webkit-filter;transition-property:opacity,-webkit-filter;transition-property:opacity,filter;transition-property:opacity,filter,-webkit-filter;-webkit-transition-duration:.15s;transition-duration:.15s;-webkit-transition-timing-function:linear;transition-timing-function:linear;font:inherit;color:inherit;text-transform:none;background-color:transparent;border:0;margin:0;overflow:visible}.hamburger:hover{opacity:.7}.hamburger.is-active:hover{opacity:.7}.hamburger.is-active .hamburger-inner,.hamburger.is-active .hamburger-inner::after,.hamburger.is-active .hamburger-inner::before{background-color:#181818}.hamburger-box{width:30px;height:17px;display:inline-block;position:relative}.hamburger-inner{display:block;top:50%;margin-top:-1.5px}.hamburger-inner,.hamburger-inner::after,.hamburger-inner::before{width:30px;height:3px;background-color:#181818;border-radius:0;position:absolute;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-transition-duration:.15s;transition-duration:.15s;-webkit-transition-timing-function:ease;transition-timing-function:ease}.hamburger-inner::after,.hamburger-inner::before{content:"";display:block}.hamburger-inner::before{top:-7px}.hamburger-inner::after{bottom:-7px}.hamburger--slider .hamburger-inner{top:1.5px}.hamburger--slider .hamburger-inner::before{top:7px;-webkit-transition-property:opacity,-webkit-transform;transition-property:opacity,-webkit-transform;transition-property:transform,opacity;transition-property:transform,opacity,-webkit-transform;-webkit-transition-timing-function:ease;transition-timing-function:ease;-webkit-transition-duration:.15s;transition-duration:.15s}.hamburger--slider .hamburger-inner::after{top:14px}.hamburger--slider.is-active .hamburger-inner{-webkit-transform:translate3d(0,7px,0) rotate(45deg);transform:translate3d(0,7px,0) rotate(45deg)}.hamburger--slider.is-active .hamburger-inner::before{-webkit-transform:rotate(-45deg) translate3d(-4.28571px,-4px,0);transform:rotate(-45deg) translate3d(-4.28571px,-4px,0);opacity:0}.hamburger--slider.is-active .hamburger-inner::after{-webkit-transform:translate3d(0,-14px,0) rotate(-90deg);transform:translate3d(0,-14px,0) rotate(-90deg)}.fixed-navbar,.nav-mobile{position:fixed;top:0;width:100%;height:3rem;z-index:5;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:.5em 1em;background-color:rgba(247,254,253,.95);font-size:.8em;line-height:1.6;-webkit-transition:all .1s ease-in-out;transition:all .1s ease-in-out}#mobile-nav-btn{font-size:1rem}#mobile-nav-btn svg{-webkit-transform:translateY(5px);transform:translateY(5px)}.mobile-nav-menu{position:fixed;top:0;z-index:6;width:100%;margin-top:3rem;min-height:calc(100vh - 3rem);margin-left:100%;-webkit-transition:all .4s ease-in-out;transition:all .4s ease-in-out;background-color:rgba(247,254,253,.95);font-size:2em;color:#181818;overflow:auto}.mobile-nav-menu .flex-col{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.mobile-nav-menu .flex-col .flex-row a,.mobile-nav-menu .flex-col .flex-row button{margin:0 .5em}.mobile-nav-menu .site-title{font-size:115%;text-align:center}.mobile-nav-menu a,.mobile-nav-menu button{color:#181818;margin-bottom:.5em}.mobile-nav-menu .underline{text-shadow:2px 2px rgba(247,254,253,.95),2px -2px rgba(247,254,253,.95),-2px 2px rgba(247,254,253,.95),-2px -2px rgba(247,254,253,.95)}.mobile-nav-menu-inner{padding:.5em}.nav-menu-expanded{margin-left:0}.fixed-navbar{display:none}@media all and (min-width:1024px){.nav-mobile{display:none}.nav-menu-expanded{display:none;-webkit-transform:translateX(100%);transform:translateX(100%)}.fixed-navbar{display:-webkit-box;display:-ms-flexbox;display:flex}.fixed-left{font-family:"DM Serif Text",Georgia,Times,serif;font-size:1.25em}.fixed-left a{font-size:1em}.navbar-site-title{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.navbar-site-title img{height:1.25em;width:1.25em}.site-header-1{margin:0;color:#181818;font-size:1em;font-weight:400;margin-left:5px}.fixed-center{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}a svg,button svg{height:18px;width:18px;-webkit-transition:all .2s ease;transition:all .2s ease}.fixed-right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.fixed-right .nav-item{margin-right:1em}.nav-item{color:#181818;margin-right:2em}.nav-item:last-child{margin-right:0}}a svg,button svg{height:18px;width:18px;-webkit-transition:all .2s ease;transition:all .2s ease;line-height:1}button svg{stroke:#181818}button svg:hover{stroke:#f4725b}a svg{fill:#181818}button>svg{stroke:#181818}button>svg:hover{stroke:#f4725b}.facebook svg:hover{fill:#1877f2}.twitter svg:hover{fill:#1da1f2}#search-button svg{height:22px;width:22px}.st-search-box{display:none;left:0;position:fixed;overflow:hidden;top:0;width:100%;height:100%;background:rgba(24,24,24,.95);opacity:0}.st-search-bar{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:1.5em 3em;width:100%;background:#181818;-webkit-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-transition-duration:.2s;transition-duration:.2s;-webkit-transition-timing-function:cubic-bezier(0,1,.5,1);transition-timing-function:cubic-bezier(0,1,.5,1)}.st-search-bar input{margin-right:1em;padding:1em 1em .5em;width:calc(80% - 1em);background:#0c0c0c;border:none;color:#f7fefd;font-size:1.25em;outline:0;border-bottom:1px solid #f4725b}.st-search-bar button{height:2em;margin-right:1em;width:calc(10% - .5em);color:#f7fefd;cursor:pointer;font-size:1em;background:#f4725b;padding:.5em}.st-search-bar button:last-child{margin-right:0}.st-search-box-max-height{display:block;height:100vh;opacity:1}.hero{margin-top:5rem;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:1em 0}.hero-left,.hero-right{-webkit-box-flex:1;-ms-flex:1;flex:1;max-width:100%;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.hero-left{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:3em}.hero-right{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.hero-right .home-page-section-header{margin-top:0;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.hero-right .card-image{width:100%}.hero-img{width:100%;height:150px;-o-object-fit:cover;object-fit:cover;background-position:center;background-repeat:no-repeat;background-size:cover}.site-title{margin:.75em 0 .25em;text-align:left;font-size:1em;color:#181818}.site-description{margin:0;color:#737274;font-size:.65em;font-weight:300}.card.featured{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;border-bottom:2px solid #acc2}.featured{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding:1em 0}.featured .card-image{max-height:150px;width:150px;-o-object-fit:cover;object-fit:cover;-ms-flex-item-align:center;align-self:center}.featured .card-body{height:100%;padding-top:0;padding-bottom:0;margin-top:0}.featured .card-body .card-date-tag:last-child{margin-top:auto}@media all and (min-width:640px) and (max-width:1024px){.hero-img{width:100%;height:225px}}@media all and (min-width:1024px){.hero{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.hero-left{margin-right:3em;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:0}.hero-img{width:100%;height:300px}.hero-right{margin-left:3em;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}}.hero-text-container{font-size:3em}.outer-container{position:relative;width:100%;padding:1em;background:#f7fefd;border-bottom:.5em solid #fff}@media only all and (min-width:640px){.outer-container{padding:1em 4em}}.inner-container{margin:0 auto 1em;max-width:1024px}.home-page-section-header{margin-bottom:.5em;line-height:1}.card{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background:#f7fefd;-webkit-transition:all .3s cubic-bezier(.25,.8,.25,1);transition:all .3s cubic-bezier(.25,.8,.25,1)}.card-image,.no-image{display:block;width:100%;height:150px;-o-object-fit:cover;object-fit:cover;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.card-image:hover,.no-image:hover{-webkit-filter:saturate(125%);filter:saturate(125%);-webkit-box-shadow:3px 3px 4px rgba(0,0,0,.12),-3px 2px 4px rgba(0,0,0,.12),5px 10px 15px rgba(0,0,0,.14),-5px 5px 15px rgba(0,0,0,.14);box-shadow:3px 3px 4px rgba(0,0,0,.12),-3px 2px 4px rgba(0,0,0,.12),5px 10px 15px rgba(0,0,0,.14),-5px 5px 15px rgba(0,0,0,.14)}.no-image{background:linear-gradient(45deg,#f4725b,#bd708c)}.card-body{margin:.5em 0;padding:1em}.card-date-tag{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.card-date,.card-tag{color:#181818;font-size:.75em;font-weight:400;text-transform:uppercase;padding:1px}.card-tag{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transition:background-color .2s ease-in-out;transition:background-color .2s ease-in-out}.card-tag:hover{background-color:#c3c0b7}.card-tag img{height:1em}.card-title{margin:.25em 0;color:#181818;position:relative;font-size:1.5em;font-weight:600;line-height:1.1;-webkit-transition:color .2s ease-in-out;transition:color .2s ease-in-out}.card-title:hover{color:#f4725b}.card-excerpt{color:#181818;margin:.5em 0}.grid-container-home{-ms-flex-line-pack:stretch;align-content:stretch;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));margin:2em 0;max-width:100%}@media all and (min-width:640px) and (max-width:1024px){.grid-container-home-1{grid-template-columns:minmax(250px,500px)}.grid-container-home-2,.grid-container-home-4{grid-template-columns:repeat(2,1fr)}.grid-container-home-3{grid-template-areas:"one one" "two three";grid-template-columns:1fr 1fr}.grid-container-home-3 .card-1{grid-area:one}.grid-container-home-3 .card-1 .card-image,.grid-container-home-3 .card-1 .no-image{height:375px;max-height:60vh}.grid-container-home-3 .card-2{grid-area:two}.grid-container-home-3 .card-3{grid-area:three}.grid-container-home-5{grid-template-areas:"one one" "two three" "four five";grid-template-columns:1fr 1fr}.grid-container-home-5 .card-1{grid-area:one}.grid-container-home-5 .card-1 .card-image,.grid-container-home-5 .card-1 .no-image{height:375px;max-height:60vh}.grid-container-home-5 .card-2{grid-area:two}.grid-container-home-5 .card-3{grid-area:three}.grid-container-home-5 .card-4{grid-area:four}.grid-container-home-5 .card-5{grid-area:five}.card-image,.no-image{height:225px}}@media all and (min-width:1024px) and (max-width:1280px){.grid-container-home-1{grid-template-columns:minmax(250px,500px)}.grid-container-home-2,.grid-container-home-4{grid-template-columns:repeat(2,1fr)}.grid-container-home-3{grid-template-areas:"one one" "two three";grid-template-columns:1fr 1fr}.grid-container-home-3 .card-1{grid-area:one}.grid-container-home-3 .card-1 .card-image,.grid-container-home-3 .card-1 .no-image{height:375px;max-height:60vh}.grid-container-home-3 .card-2{grid-area:two}.grid-container-home-3 .card-3{grid-area:three}.grid-container-home-5{grid-template-areas:"one one" "two three" "four five";grid-template-columns:1fr 1fr}.grid-container-home-5 .card-1{grid-area:one}.grid-container-home-5 .card-1 .card-image,.grid-container-home-5 .card-1 .no-image{height:375px;max-height:60vh}.grid-container-home-5 .card-2{grid-area:two}.grid-container-home-5 .card-3{grid-area:three}.grid-container-home-5 .card-4{grid-area:four}.grid-container-home-5 .card-5{grid-area:five}.card-image,.no-image{height:225px}}@media all and (min-width:1280px){.grid-container-home-1{grid-template-columns:minmax(250px,500px)}.grid-container-home-2{grid-template-columns:repeat(2,1fr)}.grid-container-home-3{grid-template-columns:repeat(3,1fr)}.grid-container-home-4{grid-template-areas:"one one one" "two three four";grid-template-columns:1fr 1fr 1fr}.grid-container-home-4 .card-1{grid-area:one}.grid-container-home-4 .card-1 .card-image,.grid-container-home-4 .card-1 .no-image{height:375px;max-height:60vh}.grid-container-home-4 .card-2{grid-area:two}.grid-container-home-4 .card-3{grid-area:three}.grid-container-home-4 .card-4{grid-area:four}.grid-container-home-4 .card-image,.grid-container-home-4 .no-image{height:225px}.grid-container-home-5{grid-template-areas:"one one one two two two" "three three four four five five";grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr}.grid-container-home-5 .card-1{grid-area:one}.grid-container-home-5 .card-1 .card-image,.grid-container-home-5 .card-1 .no-image{height:450px;max-height:60vh}.grid-container-home-5 .card-2{grid-area:two}.grid-container-home-5 .card-2 .card-image,.grid-container-home-5 .card-2 .no-image{height:450px;max-height:60vh}.grid-container-home-5 .card-3{grid-area:three}.grid-container-home-5 .card-4{grid-area:four}.grid-container-home-5 .card-5{grid-area:five}.card-image,.no-image{height:300px}}.post-reading-progress{height:3px;position:fixed;margin-top:3rem;background:-webkit-gradient(linear,left top,right top,from(rgba(244,114,91,.5)),to(rgba(189,112,140,.5)));background:linear-gradient(to right,rgba(244,114,91,.5),rgba(189,112,140,.5));top:0;width:0;z-index:10}.post-img{width:100%;height:50vh}.post-img .no-post-img,.post-img img{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.post-img .no-post-img{background:-webkit-gradient(linear,left top,right top,from(#f4725b),to(#bd708c));background:linear-gradient(to right,#f4725b,#bd708c)}.post-title{margin-bottom:0}.post-header{margin:1em 0 3em}.post-author{font-weight:600;color:#f4725b}.post{max-width:640px;margin:0 auto 8em}.post-content p{margin-bottom:1em}.author-footer-container{font-size:.8em;grid-template-areas:"title-1" "author" "title-2" "post-1" "post-2";grid-template-columns:1fr;grid-row-gap:.5em;border-top:1px solid #c3c0b7}@media only screen and (min-width:640px) and (max-width:1024px){.author-footer-container{grid-template-areas:"title-1 title-1" "author author" "title-2 title-2" "post-1 post-2";grid-template-columns:1fr 1fr}}@media only screen and (min-width:1024px){.author-footer-container{grid-template-areas:"title-1 title-2 title-2" "author post-1 post-2";grid-template-columns:repeat(3,minmax(200px,1fr))}}.author-footer .flex-row{-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:1em}.author-footer-social svg{height:1em;width:1em;fill:#c3c0b7}.author-footer-img{height:52.5px;width:52.5px;-o-object-fit:cover;object-fit:cover;border-radius:50%;margin-right:1em}.author-footer-title-1{grid-area:title-1}.author-footer-title-2{grid-area:title-2}.author-footer{grid-area:author}.related-posts-1{grid-area:post-1}.related-posts-2{grid-area:post-2}.kg-width-wide img{max-width:85vw}.kg-width-full img{max-width:100vw}.kg-bookmark-container{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;color:#181818;text-decoration:none;border:2px solid #f4725b}.kg-bookmark-content{-ms-flex-preferred-size:0;flex-basis:0;-webkit-box-flex:999;-ms-flex-positive:999;flex-grow:999;min-width:50%;padding:20px}.kg-bookmark-title{font-weight:600}.kg-bookmark-description,.kg-bookmark-metadata{margin-top:12px}.kg-bookmark-thumbnail{-ms-flex-preferred-size:15rem;flex-basis:15rem;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.kg-bookmark-thumbnail img{vertical-align:bottom;-o-object-fit:cover;object-fit:cover;width:100%}.kg-bookmark-icon{width:22px;height:22px;margin-right:8px;vertical-align:bottom}.kg-bookmark-author:after{content:"•";margin:0 6px}.kg-gallery-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin:1.5em auto;max-width:1040px;width:100vw}.kg-gallery-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.kg-gallery-image img{display:block;margin:0;width:100%;height:100%}.kg-gallery-row:not(:first-of-type){margin:.75em 0 0 0}.kg-gallery-image:not(:first-of-type){margin:0 0 0 .75em}.subscribe{min-height:300px;text-align:center}.subscribe-inner{background-color:#737274;border:8px solid #c3c0b7;padding:3em}.subscribe-inner h3{display:block;color:#f7fefd;font-size:2.4em;line-height:1}.subscribe-inner p{color:#c3c0b7;font-size:1.2em;margin-bottom:1.4em;font-weight:100}.subscribe-inner p:last-child{color:#c3c0b7;text-align:left}.subscribe-inner form{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.subscribe-inner input{height:2em;background:0 0;border:none;font-size:1.5em;border-bottom:1px solid #c3c0b7;color:#f7fefd;caret-color:#f4725b;line-height:1;font-weight:100;width:80%;text-align:left;border-radius:0}.subscribe-btn{background-color:#c3c0b7;padding:.5em;font-weight:700;line-height:1;vertical-align:bottom;margin-left:1em;height:50%}.subscribe-btn:active,.subscribe-btn:hover{background-color:#f4725b}.subscribe-btn:focus-within{outline:2px dotted currentColor}.footer{min-height:250px;background-color:#181818;border-bottom:none;color:#bed3d0}.footer .grid-container{grid-template-columns:repeat(auto-fit,minmax(200px,1fr))}.footer-section{padding:.5em}.footer-section p{margin-bottom:.5em}.footer-section .card-tag{color:#bed3d0}.footer-section .card-tag p{margin:0}.footer-location{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer-location svg{height:1em;width:1em;margin-bottom:.5em;stroke:#bed3d0;margin-top:2px;margin-right:4px;margin-left:-2px}.footer-social a{margin-right:.5em}.footer-social svg{fill:#bed3d0}.published-by-ghost{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:.75em;font-weight:100;padding:1em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
